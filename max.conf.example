[app]
app_mode = uzi
environment = dev
# possible services are: cc, cibg_mock
external_user_authentication = cibg_mock
jwe_encryption = rsa
# jwe_encryption = ed25519
loglevel = debug
mock_digid = True
i6_sign_privkey                      = AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
i4_encrypt_pubkey                    = BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB=
external_user_authentication_sym_key = 0000000000000000000000000000000000000000000000000000000000000000
jwe_sign_priv_key_path = secrets/userinfo/jwe_sign.key
jwe_sign_crt_path = secrets/userinfo/jwe_sign.crt
login_methods = digid, mock_digid, irma

[uvicorn]
# The host to be running on
host = 0.0.0.0
port = 8006

# Are we running in debug mode? turns on auto-reload on code changes
reload = True
workers = 1

# Should we create an SSL connection through uvicorn?
use_ssl = True

# Setting for the SSL connection when enabled, defined by the use_ssl setting.
base_dir = secrets/ssl
cert_file = apache-selfsigned.crt
key_file = apache-selfsigned.key

[oidc]
certificates_directory = secrets/jwks-certs
rsa_private_key = secrets/oidc/selfsigned.key
issuer = https://localhost:8006
authorize_endpoint = /authorize
jwks_endpoint = /jwks
accesstoken_endpoint = /token
userinfo_endpoint = /userinfo
scopes_supported = openid
clients_file = clients.json
subject_id_hash_salt = somesalt

[saml]
identity_providers_path = saml/identity_providers.json
xml_templates_path = saml/templates/xml
html_templates_path = saml/templates/html
base_issuer = localhost:8007

[redis]
# Connecting to the redis server through parameters:
host = localhost
port = 6379
# Enable the RedisDebugger thread
enable_debugger = False

# SSL settings, to create a TLS connection to the redis store.
ssl = False
key =
cert = 
cafile =

# How long do values live in redis?
object_ttl = 600

# prefix to cached key-value pairs stored using this service
default_cache_namespace = max

# prefix to tokens, subjects and codes stored in the redis database by the OIDC library
token_namespace = tvs_token
refresh_token_namespace = tvs_refresh_token
subject_identifier_namespace = tvs_sub_id
code_namespace = tvs_auth_code

[ratelimiter]
identity_provider_outage_key=identity_provider_outage
primary_identity_provider_key=primary_identity_provider
overflow_identity_provider_key=overflow_identity_provider
primary_identity_provider_user_limit_key=primary_identity_provider_user_limit
overflow_identity_provider_user_limit_key=overflow_identity_provider_user_limit

ipaddress_max_count=10
ipaddress_max_count_expire_seconds=10
