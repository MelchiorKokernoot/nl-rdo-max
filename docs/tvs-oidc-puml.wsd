@startuml
title tvs-connect.acc.coroncheck.nl

skinparam backgroundColor white
skinparam participantBackgroundColor #EEEBDC
skinparam noteBackgroundColor #EEE

participant RD_BC
participant IdPx
participant App

App->Inge6:/authorize?redirect_uri&code_challenge&code_method=h
Inge6->Redis:store(randstate, {code, code_challenge,code_method,state,nonce})

alt ITVS configuration

    Inge6-->App:HTMLResponse(form: AuthnRequest + RelayState=randstate, onload(submit))
    App->IdPx:post(AuthnRequest, Relaystate)

else DigiD

    Inge6-->App:RedirectResponse(/digid-authn-endpoint?SAMLRequest=XXX&RelayStat=XXX&Signature=XXX&SigAlg=XXX)
    App->IdPx:redirect(AuthnRequest, Relaystate)

end

note over App, IdPx:user does login
IdPx-->App:redirect(/acs?SAMLArt=artifact)
App->Inge6:/acs?SAMLArt=artifact&RelayState=randstate

Inge6<->Redis:get(randstate)

Inge6->Redis:store(arti:code, artifact)
Inge6-->App:/redirect_uri?code=code

note over App: Logged in, now: get accesstoken
App->Inge6:/accesstoken.body[client_id, code=XXX, redirect_uri, code_verifier]
Redis<->Inge6:get(cc_cm:code)
Inge6->Inge6:validate code_verifier

Redis<->Inge6:get(arti:code)
Inge6->RD_BC:/resolve?artifact
Inge6<--RD_BC:resolved artifact?attributes
Inge6->Inge6:validate artifactResponse

Inge6->Redis:store(h(token), attributes)

Inge6-->App:JSONResponse(access_token)
App->App:remember[access_token]
@enduml